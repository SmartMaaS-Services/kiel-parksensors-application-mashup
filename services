#!/bin/bash
#
#  Command Line Interface to start all services associated with the kiel-parksensors application
#
#  For this tutorial the commands are merely a convenience script to run docker-compose
#

set -e

waitForKeyrock () {
	echo -e "⏳ Waiting for \033[1;31mKeyrock\033[0m to be available\n"

	while [ `curl -s -o /dev/null -w %{http_code} 'http://localhost:3005/version'` -eq 000 ]
	do
		echo -e "Keyrock HTTP state: " `curl -s -o /dev/null -w %{http_code} 'http://localhost:3005/version'` " (waiting for 200)"
		sleep 5
	done
	echo -e " \033[1;32mdone\033[0m"
}

waitForWirecloud () {
	echo -e "⏳ Waiting for \033[1;35mWirecloud\033[0m to be available\n"

	while [ `curl -s -o /dev/null -w %{http_code} 'http://localhost:8000/api/features'` -eq 000 ]
	do
		echo -e "Wirecloud HTTP state: " `curl -s -o /dev/null -w %{http_code} 'http://localhost:8000/api/features'` " (waiting for 200)"
		sleep 5
	done
	echo -e " \033[1;32mdone\033[0m"
}

stoppingContainers () {
	echo "Stopping containers"
	docker-compose --log-level ERROR -p fiware down -v --remove-orphans
}

displayServices () {
	echo ""
	docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" --filter name=fiware-* --filter name=kiel-parksensors-application-mashup-node
	echo ""
}

if (( $# != 1 )); then
	echo "Illegal number of parameters"
	echo "usage: services [create|start|stop]"
	exit 1
fi

command="$1"
case "${command}" in
	"help")
		echo "usage: services [create|start|stop]"
		;;
	"start")
		stoppingContainers
		echo -e "Starting 5 containers: a \033[1;34mOrion v2\033[0m, a \033[1;34mOrion LD\033[0m, two \033[1;30mMongoDB\033[0m databases, a \033[1;95mkiel-parksensors-application-mashup\033[0m Node.Js app "
		echo -e "and microservices: \033[1;30mElasticSearch\033[0m, \033[1;30mMemCache\033[0m and \033[1;35mNGSI Proxy\033[0m\n"
		echo -e "- the \033[1;34mOrion\033[0ms are the context brokers"
		echo -e "- \033[1;31mKeyrock\033[0m is an Identity Management Front-End"
		echo -e "- \033[1;35mWirecloud\033[0m is a Dashboard Utility"
		echo -e "- \033[1;35mNGSI Proxy\033[0m creates a server that is capable of redirecting Orion notifications to web pages"
		echo ""
		docker-compose --log-level ERROR -p fiware up -d --remove-orphans
		displayServices
		waitForWirecloud
		waitForKeyrock
		echo -e "Now open \033[4mhttp://localhost:8000\033[0m"
		;;
	"stop")
		stoppingContainers
		;;
	"create")
		echo "Obtaining Mongo DB image"
		docker pull mongo:3.6
                echo "Obtaining Orion v2.2.0 Image"
                docker pull fiware/orion:2.2.0
		echo "Obtaining Latest Orion LD Image"
		docker pull fiware/orion-ld
		;;
	*)
		echo "Command not Found."
		echo "usage: services [create|start|stop]"
		exit 127;
		;;
esac
